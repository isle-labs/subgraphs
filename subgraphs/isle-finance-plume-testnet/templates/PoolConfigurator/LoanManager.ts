// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AccountingStateUpdated extends ethereum.Event {
  get params(): AccountingStateUpdated__Params {
    return new AccountingStateUpdated__Params(this);
  }
}

export class AccountingStateUpdated__Params {
  _event: AccountingStateUpdated;

  constructor(event: AccountingStateUpdated) {
    this._event = event;
  }

  get issuanceRate_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get accountedInterest_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DefaultTriggered extends ethereum.Event {
  get params(): DefaultTriggered__Params {
    return new DefaultTriggered__Params(this);
  }
}

export class DefaultTriggered__Params {
  _event: DefaultTriggered;

  constructor(event: DefaultTriggered) {
    this._event = event;
  }

  get loanId_(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class FeesPaid extends ethereum.Event {
  get params(): FeesPaid__Params {
    return new FeesPaid__Params(this);
  }
}

export class FeesPaid__Params {
  _event: FeesPaid;

  constructor(event: FeesPaid) {
    this._event = event;
  }

  get loanId_(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get adminFee_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get protocolFee_(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class FundsDistributed extends ethereum.Event {
  get params(): FundsDistributed__Params {
    return new FundsDistributed__Params(this);
  }
}

export class FundsDistributed__Params {
  _event: FundsDistributed;

  constructor(event: FundsDistributed) {
    this._event = event;
  }

  get loanId_(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get principal_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get netInterest_(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class FundsWithdrawn extends ethereum.Event {
  get params(): FundsWithdrawn__Params {
    return new FundsWithdrawn__Params(this);
  }
}

export class FundsWithdrawn__Params {
  _event: FundsWithdrawn;

  constructor(event: FundsWithdrawn) {
    this._event = event;
  }

  get loanId_(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get amount_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ImpairmentRemoved extends ethereum.Event {
  get params(): ImpairmentRemoved__Params {
    return new ImpairmentRemoved__Params(this);
  }
}

export class ImpairmentRemoved__Params {
  _event: ImpairmentRemoved;

  constructor(event: ImpairmentRemoved) {
    this._event = event;
  }

  get loanId_(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get originalPaymentDueDate_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get poolAddressesProvider_(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class IssuanceParamsUpdated extends ethereum.Event {
  get params(): IssuanceParamsUpdated__Params {
    return new IssuanceParamsUpdated__Params(this);
  }
}

export class IssuanceParamsUpdated__Params {
  _event: IssuanceParamsUpdated;

  constructor(event: IssuanceParamsUpdated) {
    this._event = event;
  }

  get domainEnd_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get issuanceRate_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get accountedInterest_(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LoanImpaired extends ethereum.Event {
  get params(): LoanImpaired__Params {
    return new LoanImpaired__Params(this);
  }
}

export class LoanImpaired__Params {
  _event: LoanImpaired;

  constructor(event: LoanImpaired) {
    this._event = event;
  }

  get loanId_(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get newDueDate_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class LoanRepaid extends ethereum.Event {
  get params(): LoanRepaid__Params {
    return new LoanRepaid__Params(this);
  }
}

export class LoanRepaid__Params {
  _event: LoanRepaid;

  constructor(event: LoanRepaid) {
    this._event = event;
  }

  get loanId_(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get principal_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get interest_(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class LoanRequested extends ethereum.Event {
  get params(): LoanRequested__Params {
    return new LoanRequested__Params(this);
  }
}

export class LoanRequested__Params {
  _event: LoanRequested;

  constructor(event: LoanRequested) {
    this._event = event;
  }

  get loanId_(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class PaymentAdded extends ethereum.Event {
  get params(): PaymentAdded__Params {
    return new PaymentAdded__Params(this);
  }
}

export class PaymentAdded__Params {
  _event: PaymentAdded;

  constructor(event: PaymentAdded) {
    this._event = event;
  }

  get loanId_(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get paymentId_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get protocolFee_(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get adminFee_(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get startDate_(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get dueDate_(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get newRate_(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class PaymentRemoved extends ethereum.Event {
  get params(): PaymentRemoved__Params {
    return new PaymentRemoved__Params(this);
  }
}

export class PaymentRemoved__Params {
  _event: PaymentRemoved;

  constructor(event: PaymentRemoved) {
    this._event = event;
  }

  get loanId_(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get paymentId_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PrincipalOutUpdated extends ethereum.Event {
  get params(): PrincipalOutUpdated__Params {
    return new PrincipalOutUpdated__Params(this);
  }
}

export class PrincipalOutUpdated__Params {
  _event: PrincipalOutUpdated;

  constructor(event: PrincipalOutUpdated) {
    this._event = event;
  }

  get principalOut_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class UnrealizedLossesUpdated extends ethereum.Event {
  get params(): UnrealizedLossesUpdated__Params {
    return new UnrealizedLossesUpdated__Params(this);
  }
}

export class UnrealizedLossesUpdated__Params {
  _event: UnrealizedLossesUpdated;

  constructor(event: UnrealizedLossesUpdated) {
    this._event = event;
  }

  get unrealizedLosses_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class LoanManager__getLoanInfoResultLoan_Struct extends ethereum.Tuple {
  get buyer(): Address {
    return this[0].toAddress();
  }

  get seller(): Address {
    return this[1].toAddress();
  }

  get receivableAsset(): Address {
    return this[2].toAddress();
  }

  get receivableTokenId(): BigInt {
    return this[3].toBigInt();
  }

  get principal(): BigInt {
    return this[4].toBigInt();
  }

  get drawableFunds(): BigInt {
    return this[5].toBigInt();
  }

  get interestRate(): BigInt {
    return this[6].toBigInt();
  }

  get lateInterestPremiumRate(): BigInt {
    return this[7].toBigInt();
  }

  get startDate(): BigInt {
    return this[8].toBigInt();
  }

  get dueDate(): BigInt {
    return this[9].toBigInt();
  }

  get originalDueDate(): BigInt {
    return this[10].toBigInt();
  }

  get gracePeriod(): BigInt {
    return this[11].toBigInt();
  }

  get isImpaired(): boolean {
    return this[12].toBoolean();
  }
}

export class LoanManager__getLoanPaymentBreakdownResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getPrincipal_(): BigInt {
    return this.value0;
  }

  getInterest_(): BigInt {
    return this.value1;
  }
}

export class LoanManager__getLoanPaymentDetailedBreakdownResult {
  value0: BigInt;
  value1: Array<BigInt>;

  constructor(value0: BigInt, value1: Array<BigInt>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    return map;
  }

  getPrincipal_(): BigInt {
    return this.value0;
  }

  getInterest_(): Array<BigInt> {
    return this.value1;
  }
}

export class LoanManager__impairmentForResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getImpairedDate(): BigInt {
    return this.value0;
  }

  getImpariedByGovernor(): boolean {
    return this.value1;
  }
}

export class LoanManager__liquidationInfoForResult {
  value0: boolean;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: boolean,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getTriggeredByGovernor(): boolean {
    return this.value0;
  }

  getPrincipal(): BigInt {
    return this.value1;
  }

  getInterest(): BigInt {
    return this.value2;
  }

  getLateInterest(): BigInt {
    return this.value3;
  }

  getProtocolFees(): BigInt {
    return this.value4;
  }
}

export class LoanManager__paymentsResult {
  value0: i32;
  value1: i32;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: i32,
    value1: i32,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0)),
    );
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1)),
    );
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getProtocolFee(): i32 {
    return this.value0;
  }

  getAdminFee(): i32 {
    return this.value1;
  }

  getStartDate(): BigInt {
    return this.value2;
  }

  getDueDate(): BigInt {
    return this.value3;
  }

  getIncomingNetInterest(): BigInt {
    return this.value4;
  }

  getIssuanceRate(): BigInt {
    return this.value5;
  }
}

export class LoanManager__repayLoanResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getPrincipal_(): BigInt {
    return this.value0;
  }

  getInterest_(): BigInt {
    return this.value1;
  }
}

export class LoanManager__sortedPaymentsResult {
  value0: i32;
  value1: i32;
  value2: BigInt;

  constructor(value0: i32, value1: i32, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0)),
    );
    map.set(
      "value1",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value1)),
    );
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getPrevious(): i32 {
    return this.value0;
  }

  getNext(): i32 {
    return this.value1;
  }

  getPaymentDueDate(): BigInt {
    return this.value2;
  }
}

export class LoanManager__triggerDefaultResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getRemainingLosses_(): BigInt {
    return this.value0;
  }

  getProtocolFees_(): BigInt {
    return this.value1;
  }
}

export class LoanManager extends ethereum.SmartContract {
  static bind(address: Address): LoanManager {
    return new LoanManager("LoanManager", address);
  }

  ADDRESSES_PROVIDER(): Address {
    let result = super.call(
      "ADDRESSES_PROVIDER",
      "ADDRESSES_PROVIDER():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_ADDRESSES_PROVIDER(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "ADDRESSES_PROVIDER",
      "ADDRESSES_PROVIDER():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  HUNDRED_PERCENT(): BigInt {
    let result = super.call(
      "HUNDRED_PERCENT",
      "HUNDRED_PERCENT():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_HUNDRED_PERCENT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "HUNDRED_PERCENT",
      "HUNDRED_PERCENT():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  LOAN_MANAGER_REVISION(): BigInt {
    let result = super.call(
      "LOAN_MANAGER_REVISION",
      "LOAN_MANAGER_REVISION():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_LOAN_MANAGER_REVISION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "LOAN_MANAGER_REVISION",
      "LOAN_MANAGER_REVISION():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  PRECISION(): BigInt {
    let result = super.call("PRECISION", "PRECISION():(uint256)", []);

    return result[0].toBigInt();
  }

  try_PRECISION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("PRECISION", "PRECISION():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  accountedInterest(): BigInt {
    let result = super.call(
      "accountedInterest",
      "accountedInterest():(uint112)",
      [],
    );

    return result[0].toBigInt();
  }

  try_accountedInterest(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "accountedInterest",
      "accountedInterest():(uint112)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  accruedInterest(): BigInt {
    let result = super.call(
      "accruedInterest",
      "accruedInterest():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_accruedInterest(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "accruedInterest",
      "accruedInterest():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  assetsUnderManagement(): BigInt {
    let result = super.call(
      "assetsUnderManagement",
      "assetsUnderManagement():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_assetsUnderManagement(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "assetsUnderManagement",
      "assetsUnderManagement():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  domainEnd(): BigInt {
    let result = super.call("domainEnd", "domainEnd():(uint48)", []);

    return result[0].toBigInt();
  }

  try_domainEnd(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("domainEnd", "domainEnd():(uint48)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  domainStart(): BigInt {
    let result = super.call("domainStart", "domainStart():(uint48)", []);

    return result[0].toBigInt();
  }

  try_domainStart(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("domainStart", "domainStart():(uint48)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  fundsAsset(): Address {
    let result = super.call("fundsAsset", "fundsAsset():(address)", []);

    return result[0].toAddress();
  }

  try_fundsAsset(): ethereum.CallResult<Address> {
    let result = super.tryCall("fundsAsset", "fundsAsset():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getLoanInfo(loanId_: i32): LoanManager__getLoanInfoResultLoan_Struct {
    let result = super.call(
      "getLoanInfo",
      "getLoanInfo(uint16):((address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool))",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(loanId_))],
    );

    return changetype<LoanManager__getLoanInfoResultLoan_Struct>(
      result[0].toTuple(),
    );
  }

  try_getLoanInfo(
    loanId_: i32,
  ): ethereum.CallResult<LoanManager__getLoanInfoResultLoan_Struct> {
    let result = super.tryCall(
      "getLoanInfo",
      "getLoanInfo(uint16):((address,address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool))",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(loanId_))],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<LoanManager__getLoanInfoResultLoan_Struct>(value[0].toTuple()),
    );
  }

  getLoanPaymentBreakdown(
    loanId_: i32,
  ): LoanManager__getLoanPaymentBreakdownResult {
    let result = super.call(
      "getLoanPaymentBreakdown",
      "getLoanPaymentBreakdown(uint16):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(loanId_))],
    );

    return new LoanManager__getLoanPaymentBreakdownResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_getLoanPaymentBreakdown(
    loanId_: i32,
  ): ethereum.CallResult<LoanManager__getLoanPaymentBreakdownResult> {
    let result = super.tryCall(
      "getLoanPaymentBreakdown",
      "getLoanPaymentBreakdown(uint16):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(loanId_))],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new LoanManager__getLoanPaymentBreakdownResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
      ),
    );
  }

  getLoanPaymentDetailedBreakdown(
    loanId_: i32,
  ): LoanManager__getLoanPaymentDetailedBreakdownResult {
    let result = super.call(
      "getLoanPaymentDetailedBreakdown",
      "getLoanPaymentDetailedBreakdown(uint16):(uint256,uint256[2])",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(loanId_))],
    );

    return new LoanManager__getLoanPaymentDetailedBreakdownResult(
      result[0].toBigInt(),
      result[1].toBigIntArray(),
    );
  }

  try_getLoanPaymentDetailedBreakdown(
    loanId_: i32,
  ): ethereum.CallResult<LoanManager__getLoanPaymentDetailedBreakdownResult> {
    let result = super.tryCall(
      "getLoanPaymentDetailedBreakdown",
      "getLoanPaymentDetailedBreakdown(uint16):(uint256,uint256[2])",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(loanId_))],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new LoanManager__getLoanPaymentDetailedBreakdownResult(
        value[0].toBigInt(),
        value[1].toBigIntArray(),
      ),
    );
  }

  impairmentFor(param0: i32): LoanManager__impairmentForResult {
    let result = super.call(
      "impairmentFor",
      "impairmentFor(uint16):(uint40,bool)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))],
    );

    return new LoanManager__impairmentForResult(
      result[0].toBigInt(),
      result[1].toBoolean(),
    );
  }

  try_impairmentFor(
    param0: i32,
  ): ethereum.CallResult<LoanManager__impairmentForResult> {
    let result = super.tryCall(
      "impairmentFor",
      "impairmentFor(uint16):(uint40,bool)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new LoanManager__impairmentForResult(
        value[0].toBigInt(),
        value[1].toBoolean(),
      ),
    );
  }

  issuanceRate(): BigInt {
    let result = super.call("issuanceRate", "issuanceRate():(uint256)", []);

    return result[0].toBigInt();
  }

  try_issuanceRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("issuanceRate", "issuanceRate():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  liquidationInfoFor(param0: i32): LoanManager__liquidationInfoForResult {
    let result = super.call(
      "liquidationInfoFor",
      "liquidationInfoFor(uint16):(bool,uint128,uint120,uint256,uint96)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))],
    );

    return new LoanManager__liquidationInfoForResult(
      result[0].toBoolean(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
    );
  }

  try_liquidationInfoFor(
    param0: i32,
  ): ethereum.CallResult<LoanManager__liquidationInfoForResult> {
    let result = super.tryCall(
      "liquidationInfoFor",
      "liquidationInfoFor(uint16):(bool,uint128,uint120,uint256,uint96)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new LoanManager__liquidationInfoForResult(
        value[0].toBoolean(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
      ),
    );
  }

  loanCounter(): i32 {
    let result = super.call("loanCounter", "loanCounter():(uint16)", []);

    return result[0].toI32();
  }

  try_loanCounter(): ethereum.CallResult<i32> {
    let result = super.tryCall("loanCounter", "loanCounter():(uint16)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes,
  ): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3),
      ],
    );

    return result[0].toBytes();
  }

  try_onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  paymentCounter(): i32 {
    let result = super.call("paymentCounter", "paymentCounter():(uint24)", []);

    return result[0].toI32();
  }

  try_paymentCounter(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "paymentCounter",
      "paymentCounter():(uint24)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  paymentIdOf(param0: i32): i32 {
    let result = super.call("paymentIdOf", "paymentIdOf(uint16):(uint24)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0)),
    ]);

    return result[0].toI32();
  }

  try_paymentIdOf(param0: i32): ethereum.CallResult<i32> {
    let result = super.tryCall("paymentIdOf", "paymentIdOf(uint16):(uint24)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0)),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  paymentWithEarliestDueDate(): i32 {
    let result = super.call(
      "paymentWithEarliestDueDate",
      "paymentWithEarliestDueDate():(uint24)",
      [],
    );

    return result[0].toI32();
  }

  try_paymentWithEarliestDueDate(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "paymentWithEarliestDueDate",
      "paymentWithEarliestDueDate():(uint24)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  payments(param0: BigInt): LoanManager__paymentsResult {
    let result = super.call(
      "payments",
      "payments(uint256):(uint24,uint24,uint48,uint48,uint128,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new LoanManager__paymentsResult(
      result[0].toI32(),
      result[1].toI32(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
    );
  }

  try_payments(
    param0: BigInt,
  ): ethereum.CallResult<LoanManager__paymentsResult> {
    let result = super.tryCall(
      "payments",
      "payments(uint256):(uint24,uint24,uint48,uint48,uint128,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new LoanManager__paymentsResult(
        value[0].toI32(),
        value[1].toI32(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
      ),
    );
  }

  principalOut(): BigInt {
    let result = super.call("principalOut", "principalOut():(uint128)", []);

    return result[0].toBigInt();
  }

  try_principalOut(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("principalOut", "principalOut():(uint128)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  receivableAsset(): Address {
    let result = super.call(
      "receivableAsset",
      "receivableAsset():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_receivableAsset(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "receivableAsset",
      "receivableAsset():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  repayLoan(loanId_: i32): LoanManager__repayLoanResult {
    let result = super.call(
      "repayLoan",
      "repayLoan(uint16):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(loanId_))],
    );

    return new LoanManager__repayLoanResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_repayLoan(
    loanId_: i32,
  ): ethereum.CallResult<LoanManager__repayLoanResult> {
    let result = super.tryCall(
      "repayLoan",
      "repayLoan(uint16):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(loanId_))],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new LoanManager__repayLoanResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
      ),
    );
  }

  requestLoan(
    receivableAsset_: Address,
    receivablesTokenId_: BigInt,
    gracePeriod_: BigInt,
    principalRequested_: BigInt,
    rates_: Array<BigInt>,
  ): i32 {
    let result = super.call(
      "requestLoan",
      "requestLoan(address,uint256,uint256,uint256,uint256[2]):(uint16)",
      [
        ethereum.Value.fromAddress(receivableAsset_),
        ethereum.Value.fromUnsignedBigInt(receivablesTokenId_),
        ethereum.Value.fromUnsignedBigInt(gracePeriod_),
        ethereum.Value.fromUnsignedBigInt(principalRequested_),
        ethereum.Value.fromUnsignedBigIntArray(rates_),
      ],
    );

    return result[0].toI32();
  }

  try_requestLoan(
    receivableAsset_: Address,
    receivablesTokenId_: BigInt,
    gracePeriod_: BigInt,
    principalRequested_: BigInt,
    rates_: Array<BigInt>,
  ): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "requestLoan",
      "requestLoan(address,uint256,uint256,uint256,uint256[2]):(uint16)",
      [
        ethereum.Value.fromAddress(receivableAsset_),
        ethereum.Value.fromUnsignedBigInt(receivablesTokenId_),
        ethereum.Value.fromUnsignedBigInt(gracePeriod_),
        ethereum.Value.fromUnsignedBigInt(principalRequested_),
        ethereum.Value.fromUnsignedBigIntArray(rates_),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  sortedPayments(param0: BigInt): LoanManager__sortedPaymentsResult {
    let result = super.call(
      "sortedPayments",
      "sortedPayments(uint256):(uint24,uint24,uint48)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new LoanManager__sortedPaymentsResult(
      result[0].toI32(),
      result[1].toI32(),
      result[2].toBigInt(),
    );
  }

  try_sortedPayments(
    param0: BigInt,
  ): ethereum.CallResult<LoanManager__sortedPaymentsResult> {
    let result = super.tryCall(
      "sortedPayments",
      "sortedPayments(uint256):(uint24,uint24,uint48)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new LoanManager__sortedPaymentsResult(
        value[0].toI32(),
        value[1].toI32(),
        value[2].toBigInt(),
      ),
    );
  }

  triggerDefault(loanId_: i32): LoanManager__triggerDefaultResult {
    let result = super.call(
      "triggerDefault",
      "triggerDefault(uint16):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(loanId_))],
    );

    return new LoanManager__triggerDefaultResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_triggerDefault(
    loanId_: i32,
  ): ethereum.CallResult<LoanManager__triggerDefaultResult> {
    let result = super.tryCall(
      "triggerDefault",
      "triggerDefault(uint16):(uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(loanId_))],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new LoanManager__triggerDefaultResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
      ),
    );
  }

  unrealizedLosses(): BigInt {
    let result = super.call(
      "unrealizedLosses",
      "unrealizedLosses():(uint128)",
      [],
    );

    return result[0].toBigInt();
  }

  try_unrealizedLosses(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "unrealizedLosses",
      "unrealizedLosses():(uint128)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get provider_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class FundLoanCall extends ethereum.Call {
  get inputs(): FundLoanCall__Inputs {
    return new FundLoanCall__Inputs(this);
  }

  get outputs(): FundLoanCall__Outputs {
    return new FundLoanCall__Outputs(this);
  }
}

export class FundLoanCall__Inputs {
  _call: FundLoanCall;

  constructor(call: FundLoanCall) {
    this._call = call;
  }

  get loanId_(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class FundLoanCall__Outputs {
  _call: FundLoanCall;

  constructor(call: FundLoanCall) {
    this._call = call;
  }
}

export class ImpairLoanCall extends ethereum.Call {
  get inputs(): ImpairLoanCall__Inputs {
    return new ImpairLoanCall__Inputs(this);
  }

  get outputs(): ImpairLoanCall__Outputs {
    return new ImpairLoanCall__Outputs(this);
  }
}

export class ImpairLoanCall__Inputs {
  _call: ImpairLoanCall;

  constructor(call: ImpairLoanCall) {
    this._call = call;
  }

  get loanId_(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class ImpairLoanCall__Outputs {
  _call: ImpairLoanCall;

  constructor(call: ImpairLoanCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get provider_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RemoveLoanImpairmentCall extends ethereum.Call {
  get inputs(): RemoveLoanImpairmentCall__Inputs {
    return new RemoveLoanImpairmentCall__Inputs(this);
  }

  get outputs(): RemoveLoanImpairmentCall__Outputs {
    return new RemoveLoanImpairmentCall__Outputs(this);
  }
}

export class RemoveLoanImpairmentCall__Inputs {
  _call: RemoveLoanImpairmentCall;

  constructor(call: RemoveLoanImpairmentCall) {
    this._call = call;
  }

  get loanId_(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class RemoveLoanImpairmentCall__Outputs {
  _call: RemoveLoanImpairmentCall;

  constructor(call: RemoveLoanImpairmentCall) {
    this._call = call;
  }
}

export class RepayLoanCall extends ethereum.Call {
  get inputs(): RepayLoanCall__Inputs {
    return new RepayLoanCall__Inputs(this);
  }

  get outputs(): RepayLoanCall__Outputs {
    return new RepayLoanCall__Outputs(this);
  }
}

export class RepayLoanCall__Inputs {
  _call: RepayLoanCall;

  constructor(call: RepayLoanCall) {
    this._call = call;
  }

  get loanId_(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class RepayLoanCall__Outputs {
  _call: RepayLoanCall;

  constructor(call: RepayLoanCall) {
    this._call = call;
  }

  get principal_(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get interest_(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class RequestLoanCall extends ethereum.Call {
  get inputs(): RequestLoanCall__Inputs {
    return new RequestLoanCall__Inputs(this);
  }

  get outputs(): RequestLoanCall__Outputs {
    return new RequestLoanCall__Outputs(this);
  }
}

export class RequestLoanCall__Inputs {
  _call: RequestLoanCall;

  constructor(call: RequestLoanCall) {
    this._call = call;
  }

  get receivableAsset_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get receivablesTokenId_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get gracePeriod_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get principalRequested_(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get rates_(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }
}

export class RequestLoanCall__Outputs {
  _call: RequestLoanCall;

  constructor(call: RequestLoanCall) {
    this._call = call;
  }

  get loanId_(): i32 {
    return this._call.outputValues[0].value.toI32();
  }
}

export class TriggerDefaultCall extends ethereum.Call {
  get inputs(): TriggerDefaultCall__Inputs {
    return new TriggerDefaultCall__Inputs(this);
  }

  get outputs(): TriggerDefaultCall__Outputs {
    return new TriggerDefaultCall__Outputs(this);
  }
}

export class TriggerDefaultCall__Inputs {
  _call: TriggerDefaultCall;

  constructor(call: TriggerDefaultCall) {
    this._call = call;
  }

  get loanId_(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class TriggerDefaultCall__Outputs {
  _call: TriggerDefaultCall;

  constructor(call: TriggerDefaultCall) {
    this._call = call;
  }

  get remainingLosses_(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get protocolFees_(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class UpdateAccountingCall extends ethereum.Call {
  get inputs(): UpdateAccountingCall__Inputs {
    return new UpdateAccountingCall__Inputs(this);
  }

  get outputs(): UpdateAccountingCall__Outputs {
    return new UpdateAccountingCall__Outputs(this);
  }
}

export class UpdateAccountingCall__Inputs {
  _call: UpdateAccountingCall;

  constructor(call: UpdateAccountingCall) {
    this._call = call;
  }
}

export class UpdateAccountingCall__Outputs {
  _call: UpdateAccountingCall;

  constructor(call: UpdateAccountingCall) {
    this._call = call;
  }
}

export class WithdrawFundsCall extends ethereum.Call {
  get inputs(): WithdrawFundsCall__Inputs {
    return new WithdrawFundsCall__Inputs(this);
  }

  get outputs(): WithdrawFundsCall__Outputs {
    return new WithdrawFundsCall__Outputs(this);
  }
}

export class WithdrawFundsCall__Inputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }

  get loanId_(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get destination_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class WithdrawFundsCall__Outputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }
}
