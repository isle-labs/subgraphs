// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AdminFeeSet extends ethereum.Event {
  get params(): AdminFeeSet__Params {
    return new AdminFeeSet__Params(this);
  }
}

export class AdminFeeSet__Params {
  _event: AdminFeeSet;

  constructor(event: AdminFeeSet) {
    this._event = event;
  }

  get adminFee_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class BaseRateSet extends ethereum.Event {
  get params(): BaseRateSet__Params {
    return new BaseRateSet__Params(this);
  }
}

export class BaseRateSet__Params {
  _event: BaseRateSet;

  constructor(event: BaseRateSet) {
    this._event = event;
  }

  get baseRate_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class BuyerSet extends ethereum.Event {
  get params(): BuyerSet__Params {
    return new BuyerSet__Params(this);
  }
}

export class BuyerSet__Params {
  _event: BuyerSet;

  constructor(event: BuyerSet) {
    this._event = event;
  }

  get buyer_(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class CoverDeposited extends ethereum.Event {
  get params(): CoverDeposited__Params {
    return new CoverDeposited__Params(this);
  }
}

export class CoverDeposited__Params {
  _event: CoverDeposited;

  constructor(event: CoverDeposited) {
    this._event = event;
  }

  get amount_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class CoverLiquidated extends ethereum.Event {
  get params(): CoverLiquidated__Params {
    return new CoverLiquidated__Params(this);
  }
}

export class CoverLiquidated__Params {
  _event: CoverLiquidated;

  constructor(event: CoverLiquidated) {
    this._event = event;
  }

  get toPool_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class CoverWithdrawn extends ethereum.Event {
  get params(): CoverWithdrawn__Params {
    return new CoverWithdrawn__Params(this);
  }
}

export class CoverWithdrawn__Params {
  _event: CoverWithdrawn;

  constructor(event: CoverWithdrawn) {
    this._event = event;
  }

  get amount_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get poolAdmin_(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get asset_(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get pool_(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class MaxCoverLiquidationSet extends ethereum.Event {
  get params(): MaxCoverLiquidationSet__Params {
    return new MaxCoverLiquidationSet__Params(this);
  }
}

export class MaxCoverLiquidationSet__Params {
  _event: MaxCoverLiquidationSet;

  constructor(event: MaxCoverLiquidationSet) {
    this._event = event;
  }

  get maxCoverLiquidation_(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class MinCoverSet extends ethereum.Event {
  get params(): MinCoverSet__Params {
    return new MinCoverSet__Params(this);
  }
}

export class MinCoverSet__Params {
  _event: MinCoverSet;

  constructor(event: MinCoverSet) {
    this._event = event;
  }

  get minCover_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OpenToPublicSet extends ethereum.Event {
  get params(): OpenToPublicSet__Params {
    return new OpenToPublicSet__Params(this);
  }
}

export class OpenToPublicSet__Params {
  _event: OpenToPublicSet;

  constructor(event: OpenToPublicSet) {
    this._event = event;
  }

  get isOpenToPublic_(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class PoolLimitSet extends ethereum.Event {
  get params(): PoolLimitSet__Params {
    return new PoolLimitSet__Params(this);
  }
}

export class PoolLimitSet__Params {
  _event: PoolLimitSet;

  constructor(event: PoolLimitSet) {
    this._event = event;
  }

  get poolLimit_(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class RedeemProcessed extends ethereum.Event {
  get params(): RedeemProcessed__Params {
    return new RedeemProcessed__Params(this);
  }
}

export class RedeemProcessed__Params {
  _event: RedeemProcessed;

  constructor(event: RedeemProcessed) {
    this._event = event;
  }

  get owner_(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get redeemableShares_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get resultingAssets_(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RedeemRequested extends ethereum.Event {
  get params(): RedeemRequested__Params {
    return new RedeemRequested__Params(this);
  }
}

export class RedeemRequested__Params {
  _event: RedeemRequested;

  constructor(event: RedeemRequested) {
    this._event = event;
  }

  get owner_(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get shares_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SharesRemoved extends ethereum.Event {
  get params(): SharesRemoved__Params {
    return new SharesRemoved__Params(this);
  }
}

export class SharesRemoved__Params {
  _event: SharesRemoved;

  constructor(event: SharesRemoved) {
    this._event = event;
  }

  get owner_(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get shares_(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TransferAdmin extends ethereum.Event {
  get params(): TransferAdmin__Params {
    return new TransferAdmin__Params(this);
  }
}

export class TransferAdmin__Params {
  _event: TransferAdmin;

  constructor(event: TransferAdmin) {
    this._event = event;
  }

  get oldAdmin_(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin_(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ValidLenderSet extends ethereum.Event {
  get params(): ValidLenderSet__Params {
    return new ValidLenderSet__Params(this);
  }
}

export class ValidLenderSet__Params {
  _event: ValidLenderSet;

  constructor(event: ValidLenderSet) {
    this._event = event;
  }

  get lender_(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isValid_(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class ValidSellerSet extends ethereum.Event {
  get params(): ValidSellerSet__Params {
    return new ValidSellerSet__Params(this);
  }
}

export class ValidSellerSet__Params {
  _event: ValidSellerSet;

  constructor(event: ValidSellerSet) {
    this._event = event;
  }

  get seller_(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isValid_(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class PoolConfigurator__processRedeemResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getRedeemableShares_(): BigInt {
    return this.value0;
  }

  getResultingAssets_(): BigInt {
    return this.value1;
  }
}

export class PoolConfigurator extends ethereum.SmartContract {
  static bind(address: Address): PoolConfigurator {
    return new PoolConfigurator("PoolConfigurator", address);
  }

  ADDRESSES_PROVIDER(): Address {
    let result = super.call(
      "ADDRESSES_PROVIDER",
      "ADDRESSES_PROVIDER():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_ADDRESSES_PROVIDER(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "ADDRESSES_PROVIDER",
      "ADDRESSES_PROVIDER():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  HUNDRED_PERCENT(): BigInt {
    let result = super.call(
      "HUNDRED_PERCENT",
      "HUNDRED_PERCENT():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_HUNDRED_PERCENT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "HUNDRED_PERCENT",
      "HUNDRED_PERCENT():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  POOL_CONFIGURATOR_REVISION(): BigInt {
    let result = super.call(
      "POOL_CONFIGURATOR_REVISION",
      "POOL_CONFIGURATOR_REVISION():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_POOL_CONFIGURATOR_REVISION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "POOL_CONFIGURATOR_REVISION",
      "POOL_CONFIGURATOR_REVISION():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  admin(): Address {
    let result = super.call("admin", "admin():(address)", []);

    return result[0].toAddress();
  }

  try_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("admin", "admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  adminFee(): i32 {
    let result = super.call("adminFee", "adminFee():(uint24)", []);

    return result[0].toI32();
  }

  try_adminFee(): ethereum.CallResult<i32> {
    let result = super.tryCall("adminFee", "adminFee():(uint24)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  asset(): Address {
    let result = super.call("asset", "asset():(address)", []);

    return result[0].toAddress();
  }

  try_asset(): ethereum.CallResult<Address> {
    let result = super.tryCall("asset", "asset():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  baseRate(): BigInt {
    let result = super.call("baseRate", "baseRate():(uint96)", []);

    return result[0].toBigInt();
  }

  try_baseRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("baseRate", "baseRate():(uint96)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  buyer(): Address {
    let result = super.call("buyer", "buyer():(address)", []);

    return result[0].toAddress();
  }

  try_buyer(): ethereum.CallResult<Address> {
    let result = super.tryCall("buyer", "buyer():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  hasSufficientCover(): boolean {
    let result = super.call(
      "hasSufficientCover",
      "hasSufficientCover():(bool)",
      [],
    );

    return result[0].toBoolean();
  }

  try_hasSufficientCover(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasSufficientCover",
      "hasSufficientCover():(bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isLender(param0: Address): boolean {
    let result = super.call("isLender", "isLender(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBoolean();
  }

  try_isLender(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isLender", "isLender(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isSeller(param0: Address): boolean {
    let result = super.call("isSeller", "isSeller(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBoolean();
  }

  try_isSeller(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isSeller", "isSeller(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maxCoverLiquidation(): i32 {
    let result = super.call(
      "maxCoverLiquidation",
      "maxCoverLiquidation():(uint24)",
      [],
    );

    return result[0].toI32();
  }

  try_maxCoverLiquidation(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "maxCoverLiquidation",
      "maxCoverLiquidation():(uint24)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  maxDeposit(receiver_: Address): BigInt {
    let result = super.call("maxDeposit", "maxDeposit(address):(uint256)", [
      ethereum.Value.fromAddress(receiver_),
    ]);

    return result[0].toBigInt();
  }

  try_maxDeposit(receiver_: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxDeposit", "maxDeposit(address):(uint256)", [
      ethereum.Value.fromAddress(receiver_),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxMint(receiver_: Address): BigInt {
    let result = super.call("maxMint", "maxMint(address):(uint256)", [
      ethereum.Value.fromAddress(receiver_),
    ]);

    return result[0].toBigInt();
  }

  try_maxMint(receiver_: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxMint", "maxMint(address):(uint256)", [
      ethereum.Value.fromAddress(receiver_),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxRedeem(owner_: Address): BigInt {
    let result = super.call("maxRedeem", "maxRedeem(address):(uint256)", [
      ethereum.Value.fromAddress(owner_),
    ]);

    return result[0].toBigInt();
  }

  try_maxRedeem(owner_: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxRedeem", "maxRedeem(address):(uint256)", [
      ethereum.Value.fromAddress(owner_),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minCover(): BigInt {
    let result = super.call("minCover", "minCover():(uint104)", []);

    return result[0].toBigInt();
  }

  try_minCover(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minCover", "minCover():(uint104)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  openToPublic(): boolean {
    let result = super.call("openToPublic", "openToPublic():(bool)", []);

    return result[0].toBoolean();
  }

  try_openToPublic(): ethereum.CallResult<boolean> {
    let result = super.tryCall("openToPublic", "openToPublic():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  pool(): Address {
    let result = super.call("pool", "pool():(address)", []);

    return result[0].toAddress();
  }

  try_pool(): ethereum.CallResult<Address> {
    let result = super.tryCall("pool", "pool():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  poolCover(): BigInt {
    let result = super.call("poolCover", "poolCover():(uint256)", []);

    return result[0].toBigInt();
  }

  try_poolCover(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("poolCover", "poolCover():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  poolLimit(): BigInt {
    let result = super.call("poolLimit", "poolLimit():(uint104)", []);

    return result[0].toBigInt();
  }

  try_poolLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("poolLimit", "poolLimit():(uint104)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  previewRedeem(owner_: Address, shares_: BigInt): BigInt {
    let result = super.call(
      "previewRedeem",
      "previewRedeem(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(owner_),
        ethereum.Value.fromUnsignedBigInt(shares_),
      ],
    );

    return result[0].toBigInt();
  }

  try_previewRedeem(
    owner_: Address,
    shares_: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "previewRedeem",
      "previewRedeem(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(owner_),
        ethereum.Value.fromUnsignedBigInt(shares_),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  processRedeem(
    shares_: BigInt,
    owner_: Address,
    sender_: Address,
  ): PoolConfigurator__processRedeemResult {
    let result = super.call(
      "processRedeem",
      "processRedeem(uint256,address,address):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(shares_),
        ethereum.Value.fromAddress(owner_),
        ethereum.Value.fromAddress(sender_),
      ],
    );

    return new PoolConfigurator__processRedeemResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_processRedeem(
    shares_: BigInt,
    owner_: Address,
    sender_: Address,
  ): ethereum.CallResult<PoolConfigurator__processRedeemResult> {
    let result = super.tryCall(
      "processRedeem",
      "processRedeem(uint256,address,address):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(shares_),
        ethereum.Value.fromAddress(owner_),
        ethereum.Value.fromAddress(sender_),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PoolConfigurator__processRedeemResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
      ),
    );
  }

  removeShares(shares_: BigInt, owner_: Address): BigInt {
    let result = super.call(
      "removeShares",
      "removeShares(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(shares_),
        ethereum.Value.fromAddress(owner_),
      ],
    );

    return result[0].toBigInt();
  }

  try_removeShares(
    shares_: BigInt,
    owner_: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "removeShares",
      "removeShares(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(shares_),
        ethereum.Value.fromAddress(owner_),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalAssets(): BigInt {
    let result = super.call("totalAssets", "totalAssets():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalAssets(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalAssets", "totalAssets():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  unrealizedLosses(): BigInt {
    let result = super.call(
      "unrealizedLosses",
      "unrealizedLosses():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_unrealizedLosses(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "unrealizedLosses",
      "unrealizedLosses():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get provider_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DepositCoverCall extends ethereum.Call {
  get inputs(): DepositCoverCall__Inputs {
    return new DepositCoverCall__Inputs(this);
  }

  get outputs(): DepositCoverCall__Outputs {
    return new DepositCoverCall__Outputs(this);
  }
}

export class DepositCoverCall__Inputs {
  _call: DepositCoverCall;

  constructor(call: DepositCoverCall) {
    this._call = call;
  }

  get amount_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositCoverCall__Outputs {
  _call: DepositCoverCall;

  constructor(call: DepositCoverCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get provider_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get poolAdmin_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get asset_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get name_(): string {
    return this._call.inputValues[3].value.toString();
  }

  get symbol_(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class ProcessRedeemCall extends ethereum.Call {
  get inputs(): ProcessRedeemCall__Inputs {
    return new ProcessRedeemCall__Inputs(this);
  }

  get outputs(): ProcessRedeemCall__Outputs {
    return new ProcessRedeemCall__Outputs(this);
  }
}

export class ProcessRedeemCall__Inputs {
  _call: ProcessRedeemCall;

  constructor(call: ProcessRedeemCall) {
    this._call = call;
  }

  get shares_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get owner_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get sender_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ProcessRedeemCall__Outputs {
  _call: ProcessRedeemCall;

  constructor(call: ProcessRedeemCall) {
    this._call = call;
  }

  get redeemableShares_(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get resultingAssets_(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class RemoveSharesCall extends ethereum.Call {
  get inputs(): RemoveSharesCall__Inputs {
    return new RemoveSharesCall__Inputs(this);
  }

  get outputs(): RemoveSharesCall__Outputs {
    return new RemoveSharesCall__Outputs(this);
  }
}

export class RemoveSharesCall__Inputs {
  _call: RemoveSharesCall;

  constructor(call: RemoveSharesCall) {
    this._call = call;
  }

  get shares_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get owner_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveSharesCall__Outputs {
  _call: RemoveSharesCall;

  constructor(call: RemoveSharesCall) {
    this._call = call;
  }

  get sharesReturned_(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RequestFundsCall extends ethereum.Call {
  get inputs(): RequestFundsCall__Inputs {
    return new RequestFundsCall__Inputs(this);
  }

  get outputs(): RequestFundsCall__Outputs {
    return new RequestFundsCall__Outputs(this);
  }
}

export class RequestFundsCall__Inputs {
  _call: RequestFundsCall;

  constructor(call: RequestFundsCall) {
    this._call = call;
  }

  get principal_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RequestFundsCall__Outputs {
  _call: RequestFundsCall;

  constructor(call: RequestFundsCall) {
    this._call = call;
  }
}

export class RequestRedeemCall extends ethereum.Call {
  get inputs(): RequestRedeemCall__Inputs {
    return new RequestRedeemCall__Inputs(this);
  }

  get outputs(): RequestRedeemCall__Outputs {
    return new RequestRedeemCall__Outputs(this);
  }
}

export class RequestRedeemCall__Inputs {
  _call: RequestRedeemCall;

  constructor(call: RequestRedeemCall) {
    this._call = call;
  }

  get shares_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get owner_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get sender_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class RequestRedeemCall__Outputs {
  _call: RequestRedeemCall;

  constructor(call: RequestRedeemCall) {
    this._call = call;
  }
}

export class SetAdminFeeCall extends ethereum.Call {
  get inputs(): SetAdminFeeCall__Inputs {
    return new SetAdminFeeCall__Inputs(this);
  }

  get outputs(): SetAdminFeeCall__Outputs {
    return new SetAdminFeeCall__Outputs(this);
  }
}

export class SetAdminFeeCall__Inputs {
  _call: SetAdminFeeCall;

  constructor(call: SetAdminFeeCall) {
    this._call = call;
  }

  get adminFee_(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetAdminFeeCall__Outputs {
  _call: SetAdminFeeCall;

  constructor(call: SetAdminFeeCall) {
    this._call = call;
  }
}

export class SetBaseRateCall extends ethereum.Call {
  get inputs(): SetBaseRateCall__Inputs {
    return new SetBaseRateCall__Inputs(this);
  }

  get outputs(): SetBaseRateCall__Outputs {
    return new SetBaseRateCall__Outputs(this);
  }
}

export class SetBaseRateCall__Inputs {
  _call: SetBaseRateCall;

  constructor(call: SetBaseRateCall) {
    this._call = call;
  }

  get baseRate_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetBaseRateCall__Outputs {
  _call: SetBaseRateCall;

  constructor(call: SetBaseRateCall) {
    this._call = call;
  }
}

export class SetBuyerCall extends ethereum.Call {
  get inputs(): SetBuyerCall__Inputs {
    return new SetBuyerCall__Inputs(this);
  }

  get outputs(): SetBuyerCall__Outputs {
    return new SetBuyerCall__Outputs(this);
  }
}

export class SetBuyerCall__Inputs {
  _call: SetBuyerCall;

  constructor(call: SetBuyerCall) {
    this._call = call;
  }

  get buyer_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetBuyerCall__Outputs {
  _call: SetBuyerCall;

  constructor(call: SetBuyerCall) {
    this._call = call;
  }
}

export class SetMaxCoverLiquidationCall extends ethereum.Call {
  get inputs(): SetMaxCoverLiquidationCall__Inputs {
    return new SetMaxCoverLiquidationCall__Inputs(this);
  }

  get outputs(): SetMaxCoverLiquidationCall__Outputs {
    return new SetMaxCoverLiquidationCall__Outputs(this);
  }
}

export class SetMaxCoverLiquidationCall__Inputs {
  _call: SetMaxCoverLiquidationCall;

  constructor(call: SetMaxCoverLiquidationCall) {
    this._call = call;
  }

  get maxCoverLiquidation_(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetMaxCoverLiquidationCall__Outputs {
  _call: SetMaxCoverLiquidationCall;

  constructor(call: SetMaxCoverLiquidationCall) {
    this._call = call;
  }
}

export class SetMinCoverCall extends ethereum.Call {
  get inputs(): SetMinCoverCall__Inputs {
    return new SetMinCoverCall__Inputs(this);
  }

  get outputs(): SetMinCoverCall__Outputs {
    return new SetMinCoverCall__Outputs(this);
  }
}

export class SetMinCoverCall__Inputs {
  _call: SetMinCoverCall;

  constructor(call: SetMinCoverCall) {
    this._call = call;
  }

  get minCover_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinCoverCall__Outputs {
  _call: SetMinCoverCall;

  constructor(call: SetMinCoverCall) {
    this._call = call;
  }
}

export class SetOpenToPublicCall extends ethereum.Call {
  get inputs(): SetOpenToPublicCall__Inputs {
    return new SetOpenToPublicCall__Inputs(this);
  }

  get outputs(): SetOpenToPublicCall__Outputs {
    return new SetOpenToPublicCall__Outputs(this);
  }
}

export class SetOpenToPublicCall__Inputs {
  _call: SetOpenToPublicCall;

  constructor(call: SetOpenToPublicCall) {
    this._call = call;
  }

  get isOpenToPublic_(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetOpenToPublicCall__Outputs {
  _call: SetOpenToPublicCall;

  constructor(call: SetOpenToPublicCall) {
    this._call = call;
  }
}

export class SetPoolLimitCall extends ethereum.Call {
  get inputs(): SetPoolLimitCall__Inputs {
    return new SetPoolLimitCall__Inputs(this);
  }

  get outputs(): SetPoolLimitCall__Outputs {
    return new SetPoolLimitCall__Outputs(this);
  }
}

export class SetPoolLimitCall__Inputs {
  _call: SetPoolLimitCall;

  constructor(call: SetPoolLimitCall) {
    this._call = call;
  }

  get poolLimit_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPoolLimitCall__Outputs {
  _call: SetPoolLimitCall;

  constructor(call: SetPoolLimitCall) {
    this._call = call;
  }
}

export class SetValidLenderCall extends ethereum.Call {
  get inputs(): SetValidLenderCall__Inputs {
    return new SetValidLenderCall__Inputs(this);
  }

  get outputs(): SetValidLenderCall__Outputs {
    return new SetValidLenderCall__Outputs(this);
  }
}

export class SetValidLenderCall__Inputs {
  _call: SetValidLenderCall;

  constructor(call: SetValidLenderCall) {
    this._call = call;
  }

  get lender_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get isValid_(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetValidLenderCall__Outputs {
  _call: SetValidLenderCall;

  constructor(call: SetValidLenderCall) {
    this._call = call;
  }
}

export class SetValidSellerCall extends ethereum.Call {
  get inputs(): SetValidSellerCall__Inputs {
    return new SetValidSellerCall__Inputs(this);
  }

  get outputs(): SetValidSellerCall__Outputs {
    return new SetValidSellerCall__Outputs(this);
  }
}

export class SetValidSellerCall__Inputs {
  _call: SetValidSellerCall;

  constructor(call: SetValidSellerCall) {
    this._call = call;
  }

  get seller_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get isValid_(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetValidSellerCall__Outputs {
  _call: SetValidSellerCall;

  constructor(call: SetValidSellerCall) {
    this._call = call;
  }
}

export class TransferAdminCall extends ethereum.Call {
  get inputs(): TransferAdminCall__Inputs {
    return new TransferAdminCall__Inputs(this);
  }

  get outputs(): TransferAdminCall__Outputs {
    return new TransferAdminCall__Outputs(this);
  }
}

export class TransferAdminCall__Inputs {
  _call: TransferAdminCall;

  constructor(call: TransferAdminCall) {
    this._call = call;
  }

  get newAdmin_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferAdminCall__Outputs {
  _call: TransferAdminCall;

  constructor(call: TransferAdminCall) {
    this._call = call;
  }
}

export class TriggerDefaultCall extends ethereum.Call {
  get inputs(): TriggerDefaultCall__Inputs {
    return new TriggerDefaultCall__Inputs(this);
  }

  get outputs(): TriggerDefaultCall__Outputs {
    return new TriggerDefaultCall__Outputs(this);
  }
}

export class TriggerDefaultCall__Inputs {
  _call: TriggerDefaultCall;

  constructor(call: TriggerDefaultCall) {
    this._call = call;
  }

  get loanId_(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class TriggerDefaultCall__Outputs {
  _call: TriggerDefaultCall;

  constructor(call: TriggerDefaultCall) {
    this._call = call;
  }
}

export class WithdrawCoverCall extends ethereum.Call {
  get inputs(): WithdrawCoverCall__Inputs {
    return new WithdrawCoverCall__Inputs(this);
  }

  get outputs(): WithdrawCoverCall__Outputs {
    return new WithdrawCoverCall__Outputs(this);
  }
}

export class WithdrawCoverCall__Inputs {
  _call: WithdrawCoverCall;

  constructor(call: WithdrawCoverCall) {
    this._call = call;
  }

  get amount_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get recipient_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawCoverCall__Outputs {
  _call: WithdrawCoverCall;

  constructor(call: WithdrawCoverCall) {
    this._call = call;
  }
}
